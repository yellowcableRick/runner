#!/usr/bin/env bash
#  @runner.yc
#  Bash script to run ordered scripts from a folder
#
#  @license Yellow Cable (See LICENCE)
#  @version 1.4
#  @author Rick Pennings // info@yellowcable.nl
#  @updated 2023-04-17
#  @link http://yellowcable.nl

# ----------------------------------------------------------------------------------------------------------------------
# Methods and variables needed for any run script called.
# ----------------------------------------------------------------------------------------------------------------------
getRunnerPath() {
  echo "$(cd -- "$(dirname "$0")" || exit 1; pwd -P)"
}

getScriptPath() {
  case $1 in
    /*) echo "$1" ;;
    *) echo "$(getRunnerPath)/$1" ;;
  esac
}

getFirstParameter() {
  local OPTIND
  local amountOfOptions=1

  while getopts "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890" unused; do
    (( amountOfOptions++ ))
  done

  echo "${!amountOfOptions}";
}

getContents() {
  ls -d "$1"/* | grep "[0-9].*_" | sort
}

runTheNumbers() {
for i in $1
  do
    if [ -f "$i" ]; then
      # Check if the file is a bash (shell) script or php script
      local EXT; EXT=${i##*.}
      if [ "$EXT" == "sh" ] || [ "$EXT" == "php" ]; then
        local SCRIPT
        local ACTION

        SCRIPT=$(printf '%-30s' "$2")
        ACTION=$(basename "$i")
        ACTION=${ACTION#*_}
        ACTION=${ACTION%.*}
        ACTION=$(printf '%-30s' "$ACTION")

        echo -ne "$SCRIPT $ACTION "
        case $EXT in
          sh)   source "$i" "$3"
                ;;
          php)  php "$i" "$3"
                ;;
        esac
        case $? in
          0)  echo -e "[\033[0;32mOK\033[0m]"
              ;;
          1)  echo -e "[\033[0;33mWARNING\033[0m]"
              ;;
          *)  echo -e "[\033[0;31mFAILED\033[0m]"; exit 1;
              ;;
        esac
      fi
    elif [ -d "$i" ]; then
      local DIR; DIR=$(basename "$i")
      runTheNumbers "$(getContents "$i")" "$2/${DIR##*_}"
    else
      echo -e "[\033[0;31mFAILED\033[0m]"
      >&2 echo "[ERROR] runner.yc halted. Found object which can't be parsed.: "$i
      exit 1
    fi
  done
}

# ----------------------------------------------------------------------------------------------------------------------
# Run prerequisites directory
# ----------------------------------------------------------------------------------------------------------------------
if [ -d "$(getRunnerPath)/_prerequisites" ]; then
  runTheNumbers "$(getContents "$(getRunnerPath)/_prerequisites")" "prerequisites"
fi
# ----------------------------------------------------------------------------------------------------------------------
# Run script collection using first parameter after flags
# ----------------------------------------------------------------------------------------------------------------------
runTheNumbers "$(getContents "$(getScriptPath "$(getFirstParameter "$@")")")" "$(getFirstParameter "$@")" "$*"
